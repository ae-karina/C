#include <stdio.h>

void f(int **q) // q是个指针变量，无论q是什么类型的指针变量，都只占4个字节 32位计算机是
{
  int i = 5;
  //*q等价于p  q和**q都不等价于p
  //*q = i; //error 因为*q = i; 等价于 p = i; 这样写是错误的
  *q = &i; // p = &i;
}

int main(void)
{
  int *p; // 13行

  f(&p);
  printf("%d\n", *p); // 16行  本语句语法没有问题，不会报错，但逻辑上有问题

  return 0;
}

/*
以前的程序是通过指针，改写main函数里变量的值
这个程序是通过二级指针，给main函数里的指针变量赋值
但是，f函数运行完毕后，i变量被释放，所以，p指针访问了一个没被允许的空间
f终止 i，q都没有了，访问权限返回给操作系统了，不能再让main使用。可以保存i地址，但不能访问i空间，因为已经释放了

其实就是栈空间开辟新变量，指针指向了这个变量，然后函数结束后弹栈，这个变量按理说是被回收或者被抛弃，这里就是逻辑上不不可以跨函数


 */